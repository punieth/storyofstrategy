---
import { Button } from "@eliancodes/brutal-ui";
interface Props {
  pageTitle?: string;
}

const navigationItems = [
  { name: "Home", url: "/" },
  { name: "Blog", url: "/blog/" },
];

const socialIcons = [
  {
    name: "Twitter",
    url: "https://www.twitter.com/eliancodes",
    icon: "i-uil-twitter",
  },
  {
    name: "LinkedIn",
    url: "https://www.linkedin.com/in/elianvancutsem",
    icon: "i-uil-linkedin",
  },
];

const { pageTitle } = Astro.props;
---

<header data-site-header class='bg-[#f5ff85] border-4 border-black shadow-[2px_2px_0_2px_#000] md:shadow-[4px_4px_0_4px_#000] sticky top-0 z-50 transition-transform duration-200 will-change-transform'>
  {pageTitle && <h1 class="hidden">{pageTitle}</h1>}

  {/* Desktop Layout */}
  <div class="hidden md:flex justify-between p-6 items-center">
    <div class="flex flex-col items-start gap-1">
      <span class="inline-flex items-center gap-2 px-3 py-1 text-xs font-black uppercase tracking-[0.2em] text-black bg-[#00ff88] border-2 border-black shadow-[4px_4px_0_0_#000]">
        <span class="block h-1.5 w-1.5 rounded-full bg-black"></span>
        Think → Build
      </span>
      <a href="/" title="Back to Home" class="hover:underline">
        <p class="righteous text-5xl text-black">Story of Strategy</p>
      </a>
    </div>
    <nav>
      <h2 class="hidden">Navigation</h2>
      <ul class="flex items-center gap-4 poppins">
        {
          navigationItems.map((item) => (
            <li>
              <Button href={item.url} title={`Go to ${item.name}`}>
                {item.name}
              </Button>
            </li>
          ))
        }
        {
          socialIcons.map((item) => (
            <li class="bg-white text-green border-black border-2 card-shadow hover:bg-light-green transition-colors ease-in-out duration-200">
              <a
                href={item.url}
                class="p-2 block"
                target="_blank"
                title={`See @ElianCodes on ${item.name}`}
              >
                <div class:list={[item.icon, "w-6 h-6"]} />
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>

  {/* Mobile Layout */}
  <nav class="md:hidden flex justify-between items-center p-4">
    <div class="flex flex-col items-start gap-1 flex-1 min-w-0">
      <span class="inline-flex items-center gap-1 px-2 py-0.5 text-[10px] font-black uppercase tracking-[0.15em] text-black bg-[#00ff88] border border-black shadow-[2px_2px_0_0_#000]">
        <span class="block h-1 w-1 rounded-full bg-black"></span>
        Think → Build
      </span>
      <a href="/" title="Back to Home" class="hover:underline">
        <p class="righteous text-2xl text-black truncate">Story of Strategy</p>
      </a>
    </div>
    <ul class="flex gap-2 items-center poppins flex-shrink-0">
      <li
        class="bg-white text-green border-black border-2 card-shadow hover:bg-light-green active:bg-light-green transition-all duration-200"
      >
        <a href="/blog/" class="p-1 px-2 block text-xs" title="Go to Blog"
          >Blog</a
        >
      </li>
      {
        socialIcons.map((item) => (
          <li class="bg-white text-green border-black border-2 card-shadow hover:bg-light-green active:bg-light-green transition-all duration-200">
            <a
              href={item.url}
              class="p-1 block"
              target="_blank"
              title={`See @ElianCodes on ${item.name}`}
            >
              <div class:list={[item.icon, "w-4 h-4"]} />
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<script>
  if (typeof window !== "undefined") {
    const body = document.body;
    if (body && body.classList.contains("blog-post-layout")) {
      const header = document.querySelector("[data-site-header]");
      if (!header) {
        return;
      }

      let lastScroll = window.scrollY;
      const threshold = 10;

      const handleScroll = () => {
        const currentScroll = window.scrollY;

        if (currentScroll > lastScroll + threshold && currentScroll > header.getBoundingClientRect().height) {
          header.classList.add("is-hidden");
        } else if (currentScroll < lastScroll - threshold) {
          header.classList.remove("is-hidden");
        }

        lastScroll = currentScroll;
      };

      window.addEventListener("scroll", handleScroll, { passive: true });
    }
  }
</script>
