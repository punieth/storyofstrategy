---
interface Props {
  pageTitle?: string;
}

const navigationItems = [
  { name: 'Home', url: '/' },
  { name: 'Blog', url: '/blog/' },
];

const socialIcons = [
  {
    name: 'Twitter',
    url: 'https://www.twitter.com/eliancodes',
    icon: 'i-uil-twitter',
  },
    {
    name: 'LinkedIn',
    url: 'https://www.linkedin.com/in/elianvancutsem',
    icon: 'i-uil-linkedin',
  },
];

const { pageTitle } = Astro.props;
---

<header
  class='theme-panel border-b-4 flex justify-between p-6 items-center sticky top-0 z-50'
  style='border-color: var(--ink);'
>
  {pageTitle && <h1 class='hidden'>{pageTitle}</h1>}
  <a href='/' title='Back to Home'>
    <p class='righteous md:text-5xl'>Story of Strategy</p>
  </a>
  <nav class='hidden md:inline-block'>
    <h2 class='hidden'>Navigation</h2>
    <ul class='flex items-center gap-4 poppins'>
      {
        navigationItems.map((item) => (
          <li>
            <a
              href={item.url}
              class='theme-chip border-2 rounded px-4 py-2 uppercase text-xs tracking-[0.24em] font-semibold card-shadow inline-flex items-center gap-2 transition-transform duration-150 hover:-translate-y-1'
              style='border-color: var(--ink);'
              title={`Go to ${item.name}`}
            >
              {item.name}
            </a>
          </li>
        ))
      }
      <li>
        <button
          type='button'
          class='theme-chip border-2 rounded font-semibold uppercase text-xs tracking-[0.2em] px-3 py-2 card-shadow flex items-center gap-2'
          data-theme-toggle
          aria-label='Toggle color theme'
          style='border-color: var(--ink);'
        >
          <span class='text-base' data-theme-icon>ðŸŒž</span>
          <span data-theme-label>Dark mode</span>
        </button>
      </li>
      {
        socialIcons.map((item) => (
          <li class='theme-chip border-black border-2 rounded card-shadow transition-colors ease-in-out duration-200'>
            <a
              href={item.url}
              class='p-2 block text-current'
              target='_blank'
              title={`See @ElianCodes on ${item.name}`}
            >
              <div class:list={[item.icon, 'w-6 h-6']} />
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
  <nav class='md:hidden flex'>
    <h2 class='hidden'>Mobile Navigation</h2>
    <ul class='flex gap-4 items-center poppins'>
      <li>
        <button
          type='button'
          class='theme-chip border-2 rounded font-semibold uppercase text-xs tracking-[0.2em] px-2 py-1.5 card-shadow flex items-center gap-1'
          data-theme-toggle
          aria-label='Toggle color theme (mobile)'
          style='border-color: var(--ink);'
        >
          <span class='text-sm' data-theme-icon>ðŸŒž</span>
        </button>
      </li>
      {
        navigationItems.map((item) => (
          <li>
            <a
              href={item.url}
              class='theme-chip border-2 rounded px-3 py-1.5 uppercase text-xs tracking-[0.24em] font-semibold card-shadow inline-flex items-center gap-2 transition-transform duration-150 hover:-translate-y-1'
              style='border-color: var(--ink);'
              title={`Go to ${item.name}`}
            >
              {item.name}
            </a>
          </li>
        ))
      }
      {
        socialIcons.map((item) => (
          <li class='theme-chip border-2 rounded card-shadow transition-colors ease-in-out duration-200' style='border-color: var(--ink);'>
            <a
              href={item.url}
              class='p-1 block text-current'
              target='_blank'
              title={`See @ElianCodes on ${item.name}`}
            >
              <div class:list={[item.icon, 'w-5 h-5']} />
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<script is:inline>
  (() => {
    const storageKey = 'sos-theme';
    const root = document.documentElement;
    const getTheme = () => root.dataset.theme || 'light';

    const updateVisual = (theme) => {
      document.querySelectorAll('[data-theme-toggle]').forEach((button) => {
        const label = button.querySelector('[data-theme-label]');
        const icon = button.querySelector('[data-theme-icon]');
        if (label) label.textContent = theme === 'dark' ? 'Light mode' : 'Dark mode';
        if (icon) icon.textContent = theme === 'dark' ? 'ðŸŒ™' : 'ðŸŒž';
      });
    };

    const setTheme = (theme) => {
      root.dataset.theme = theme;
      try {
        localStorage.setItem(storageKey, theme);
      } catch (err) {
        /* ignore */
      }
      updateVisual(theme);
    };

    const bindToggles = () => {
      const toggles = document.querySelectorAll('[data-theme-toggle]:not([data-theme-bound])');
      if (!toggles.length) {
        updateVisual(getTheme());
        return;
      }
      toggles.forEach((button) => {
        button.dataset.themeBound = 'true';
        button.addEventListener('click', () => {
          const next = getTheme() === 'dark' ? 'light' : 'dark';
          setTheme(next);
        });
      });
      updateVisual(getTheme());
    };

    bindToggles();
    document.addEventListener('astro:after-swap', bindToggles);
    document.addEventListener('astro:page-load', bindToggles);
  })();
</script>
