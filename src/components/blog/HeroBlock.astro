---
const tones = { lime:{bar:"#d9ff6a"}, blue:{bar:"#60a5fa"}, violet:{bar:"#c084fc"}, peach:{bar:"#fb923c"} } as const;
type Tone = keyof typeof tones;
type Elev = "none"|"sm"|"md";

interface Props {
  kicker?: string; title: string; tagline?: string; as?: "h1"|"h2"; tone?: Tone; elev?: Elev;
}
const { kicker="", title, tagline="", as="h1", tone="lime", elev="md" } = Astro.props as Props;
const bar = tones[tone].bar; const Tag = as;
---

<section class={`nb-box nb-hero ${elev==="md"?"elev-md":elev==="sm"?"elev-sm":"elev-none"}`}>
  {kicker && <span class="kicker">{kicker}</span>}
  <Tag class="nb-title">{title}</Tag>
  {tagline && <p class="nb-tagline">{tagline}</p>}
  <div class="bar" style={`--bar:${bar}`}></div>
</section>

<style>
  .nb-box{ background:#fff; border:4px solid #000; border-radius:12px; padding:1.25rem 1rem; }
  .nb-hero{ padding:1.35rem 1.1rem; }
  /* Scoped hero kicker â€” inline badge */
  .nb-hero .kicker{
    position: static;           /* overrides global brick style */
    display:inline-block;
    background:#000;
    color:#fff;
    border:2px solid #000;
    padding:2px 8px;
    font-size:.72rem;
    text-transform:uppercase;
    letter-spacing:.06em;
  }
  .nb-title{ font-weight:800; font-size:clamp(1.9rem,3.2vw,2.6rem); line-height:1.15; margin:.3rem 0 .15rem; }
  .nb-tagline{ color:#222; opacity:.85; font-size:clamp(.98rem,1.6vw,1.1rem); margin-top:.25rem; }
  .bar{ height:10px; width:min(240px,45%); background:var(--bar); border:2px solid #000; border-radius:8px; box-shadow:3px 3px 0 #000; margin-top:.6rem; }
</style>