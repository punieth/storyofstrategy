---
type Elev = "none"|"sm";
interface Step { text: string }
interface Props { steps: Step[]; elev?: Elev; kicker?: string; }
const { steps, elev="none", kicker="Flow" } = Astro.props as Props;
---
<section class={`nb-flowwrap elev-${elev}`}>
  <span class="nb-kicker">{kicker}</span>
  <ol class="nb-flow">
    {steps.map((s,i)=>(
      <li class="nb-row">
        <div class="nb-num">{i+1}</div>
        <div class="nb-txt">{s.text}</div>
      </li>
    ))}
  </ol>
</section>

<style>
.nb-flowwrap{ position:relative; padding-top:.8rem; }
.nb-kicker{
  position:absolute; top:-.6rem; left:1rem;
  display:inline-block; background:#000; color:#fff; border:2px solid #000;
  padding:2px 8px; font-size:.7rem; letter-spacing:.06em; text-transform:uppercase;
}
.nb-flow{ display:flex; flex-direction:column; gap:10px; }
.nb-row{ display:grid; grid-template-columns:44px 1fr; align-items:center; gap:10px; background:#fff; border:4px solid #000; border-radius:12px; padding:.6rem; }
.nb-num{ display:grid; place-items:center; font-weight:800; border:3px solid #000; width:40px; height:40px; border-radius:10px; background:#f5ffcf; }
.nb-txt{ line-height:1.6; }
.elev-sm .nb-row{ box-shadow:6px 6px 0 #000; }
</style>