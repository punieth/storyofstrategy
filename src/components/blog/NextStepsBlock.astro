---
type Elev = "none"|"sm";
interface Step { label: string; note?: string }
interface Props { steps: Step[]; elev?: Elev; }
const { steps, elev="none" } = Astro.props as Props;
---
<section class={`nb-next elev-${elev}`}>
  <span class="nb-kicker">Next steps (2 weeks)</span>
  <div class="nb-lane">
    {steps.map((s)=>(
      <div class="nb-node">
        <div class="nb-lbl">{s.label}</div>
        {s.note && <div class="nb-nt">{s.note}</div>}
      </div>
    ))}
  </div>
</section>

<style>
.nb-kicker{display:inline-block;background:#000;color:#fff;border:2px solid #000;padding:2px 8px;font-size:.7rem;text-transform:uppercase;letter-spacing:.06em;}
.nb-lane{display:grid;gap:12px;grid-template-columns:1fr;margin-top:.5rem;}
@media (min-width:768px){.nb-lane{grid-template-columns:repeat(3,1fr);}}
.nb-node{background:#fff;border:4px solid #000;border-radius:12px;padding:.75rem;}
.nb-lbl{font-weight:800;}
.nb-nt{margin-top:.25rem;color:#222;opacity:.85;}
.elev-sm .nb-node{box-shadow:6px 6px 0 #000;}
</style>